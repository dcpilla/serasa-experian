---
- name: call task to remedy environment
  include_tasks: remedy_environment.yml

- name: Include change order vars {{ambiente}} when change_type is PATCH current change_type is {{change_type}} #types to change_type is.. eks_ami_patch instance_patch
  include_vars: '{{change_type}}.yml'
#  include_vars: "{{ item.include_vars }}"
#  with_items:
#    - { include_vars: reports-dev.yml , when: "{{ambiente == 'reports-dev'}}"}
#    - { include_vars: ssrm-mongo-uat-b.yml , when: "{{ambiente == 'ssrm-mongo-uat-b'}}"}
#  when: item.when | default(True) | bool

  #  with_items:
          #  - "patch/Linux/{{ patch_group }}.yml"
#
- name: set Instance
  set_fact:
#    instance: experian
    instance: experiantest
#  instance: experianptnrdev

- name: Create change from {{workerexec}}
  #  delegate_to: '{{workerexec}}'
  block:
    #date register
    - name: Get start date with sambarilove
      become: false
#      set_fact:
#        start: "{{ lookup('pipe', 'date -d \"5 hour ago\" +\"%Y-%m-%d %H:%M:%S\"') }}"
      shell: 'date "+%Y-%m-%d %H:%M:%S" -d "8 hour ago"'
      register: st_day
    
    - name: get end day
      set_fact:
        end: "{{ lookup('pipe', 'date -d \"7 days \" +\"%Y-%m-%d %H:%M:%S\"') }}"

#      shell: 'date "+%Y-%m-%d %H:%M:%S" -d "7 days"'
#      register: end_day
    
    - set_fact:
        start: '{{st_day.stdout}}'
        real_start_to_close: '{{st_day.stdout}}'
#        end: '{{end_day.stdout}}'
    
    #end date register
    #
    
    - name: create change on instance {{instance}} from template {{chg_template_name}} Date-start {{start}} and Date-end{{end}} user nike {{snow_login_nike}} user sd {{snow_login}}
      become: false
      #      ignore_errors: yes
      environment:
        https_proxy: https_proxy=https://spobrproxy:3128
      uri:
        url: https://{{instance}}.service-now.com/api/eplc/exp/createStandardChange/c719bacfdb9f97402511fa910f96192e/createStandardChange
        #        user: "{{snow_login}}"
        #        password: "{{snow_pass}}"
        user: "{{snow_login_nike}}"
        password: "{{snow_pass_nike}}"
        force_basic_auth: yes
        method: POST
        return_content: yes
        headers:
         content-type: application/json
         accept: application/json
        body_format: json
        body:
          assignment_group: "{{chg_assignment_group}}"
          assigned_to: "{{chg_assigned_to}}"
          template: "{{chg_template_name}}"
          justification: "{{chg_justification}}"
          short_description: "{{chg_short_description}}"
          description: "{{chg_description}}"
          state: 'Authorize' #"{{chg_state}}"
          u_change_country: "Brazil"
          business_service: "{{chg_business_service}}"
          implementation_plan: "{{chg_plan_implementation}}"
          u_environment: "{{chg_environment}}"
          u_test_results: "{{chg_test_results}}"
          risk_impact_analysis: "{{chg_impact_analysis}}"
          cmdb_ci: "{{chg_ci}}"
          backout_plan: "{{chg_backout_pla}}"
          u_pre_change_test_plan: "N/A"
          u_post_change_test_plan: "N/A"
          start_date: "{{start}}"
          end_date: "{{end}}"
          u_sys_outage: 'no'
        validate_certs: no
      register: change
      
    #get change number
    - debug:
        var: change

    - set_fact:
         chg_num: "{{ change.content | regex_search('CHG[0-9]{7}') }}"

    - debug:
        var: chg_num
    
    ## to running this playbook you need this variables
    ###Variables name####values definition##
    # chg_template_name    # load from 
    # chg_justification    # load from
    #
    # Returns
    #   host_ip_infoblox
    
