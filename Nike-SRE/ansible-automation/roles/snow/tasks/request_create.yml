---
- name: call task to remedy environment
  include_tasks: remedy_environment.yml

- name: Include incident file vars {{ambiente}} when change_type is PATCH current change_type is {{incident_type}} 
  include_vars: '{{incident_type}}.yml'
  when: incident_type is defined



- name: set Instance
  set_fact:
#    instance: experian
    instance: experiantest
#  instance: experianptnrdev
#


#Req de solicitação de monitoração
#https://experian.service-now.com/now/nav/ui/classic/params/target/com.glideapp.servicecatalog_cat_item_view.do%3Fv%3D1%26sysparm_id%3De1ca85c5dbf397042511fa910f96196a%26sysparm_link_parent%3Dfe94fd21dba397802511fa910f961981%26sysparm_catalog%3De0d08b13c3330100c8b837659bba8fb4%26sysparm_catalog_view%3Dcatalog_default%26sysparm_view%3Dcatalog_default

- name: Create request from {{workerexec}}
  #  delegate_to: '{{workerexec}}'
  block:
    #date register
    - name: Get start date with sambarilove
      become: false
#      set_fact:
#        start: "{{ lookup('pipe', 'date -d \"5 hour ago\" +\"%Y-%m-%d %H:%M:%S\"') }}"
      shell: 'date "+%Y-%m-%d %H:%M:%S" -d "8 hour ago"'
      register: st_day
    
    - name: get end day
      set_fact:
        end: "{{ lookup('pipe', 'date -d \"7 days \" +\"%Y-%m-%d %H:%M:%S\"') }}"

#      shell: 'date "+%Y-%m-%d %H:%M:%S" -d "7 days"'
#      register: end_day
    
    - set_fact:
        start: '{{st_day.stdout}}'
        real_start_to_close: '{{st_day.stdout}}'
#        end: '{{end_day.stdout}}'
    
    #end date register
    #
    
    - name: create incidente nike {{snow_login_nike}} user sd {{snow_login}}
      become: false
      ignore_errors: yes
      environment:
        https_proxy: https_proxy=https://spobrproxy:3128
      uri:
        url: https://{{instance}}.servicenow.com/api/sn_sc/v1/servicecatalog/cart/submit_order
        #        user: "{{snow_login}}"
        #        password: "{{snow_pass}}"
        user: "{{snow_login_nike}}"
        password: "{{snow_pass_nike}}"
        force_basic_auth: yes
        validate_certs: no
        method: POST
        return_content: yes
        headers:
         content-type: application/json
         accept: application/json
        body_format: json
        body:
          u_caller_company: 'Serasa'
          company: 'Serasa' #
          contact_type: 'Self-sevice'  #Self-sevice| Chat | Event | Email | Phone | Walk-in
          category: 'Access / Account' #Security | Hardware | Software
          subcategory: 'Account Issue'#

#          business_service: #
#          cmdb_ci: #
#          u_environment: Development #'{{ambiente}}' #Production | Development | UAT | Testing | taging | Decommissioning
#
#          caller_id: '{{caller}}' # Campo 
#          u_on_behalf_of: '{{caller}}'
#          #         u_client_reference: '{{caller}}' # field Customer Ref#
#
#          assignment_group: '{{inc_assignment_group}}'
#          urgency: 3 # (3- low)
#          impact: 3 # (3- low)
#          u_impacted_region: 'LATAM' #
##         state: 
#
#
          short_description: 'teste de criação de incidente short_description'
          description: 'teste de criação de incidente description'
          items:
            cart_item_id: "String
            catalog_item_id: "String
            item_name: "String
            localized_recurring_price: "String
            localized_price: "String
            price: "String
            quantity: "String
            recurring_frequency: "String
            recurring_price: "String"
            
            





                            



#          assignment_group: "{{chg_assignment_group}}"
#          assigned_to: "{{chg_assigned_to}}"
#          template: "{{chg_template_name}}"
#          justification: "{{chg_justification}}"
#          short_description: "{{chg_short_description}}"
#          description: "{{chg_description}}"
#          state: 'Authorize' #"{{chg_state}}"
#          u_change_country: "Brazil"
#          business_service: "{{chg_business_service}}"
#          implementation_plan: "{{chg_plan_implementation}}"
#          u_environment: "{{chg_environment}}"
#          u_test_results: "{{chg_test_results}}"
#          risk_impact_analysis: "{{chg_impact_analysis}}"
#          cmdb_ci: "{{chg_ci}}"
#          backout_plan: "{{chg_backout_pla}}"
#          u_pre_change_test_plan: "N/A"
#          u_post_change_test_plan: "N/A"
#          start_date: "{{start}}"
#          end_date: "{{end}}"
#          u_sys_outage: 'no'
      register: inc
      
    #get change number
    - debug:
        var: inc

    - set_fact:
         inc_num: "{{ inc.content | regex_search('INC[0-9]{7}') }}"

    - debug:
        var: inc_num

#    - set_fact:
#         chg_num: "{{ change.content | regex_search('CHG[0-9]{7}') }}"
#
#    - debug:
#        var: chg_num
    
    ## to running this playbook you need this variables
    ###Variables name####values definition##
    # chg_template_name    # load from 
    # chg_justification    # load from
    #
    # Returns
    #   host_ip_infoblox
    
